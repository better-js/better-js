import{_ as o,c as a,o as e,V as t}from"./chunks/framework.YnO4XY28.js";const g=JSON.parse('{"title":"MangoDB简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mongodb/index.md","filePath":"guide/mongodb/index.md","lastUpdated":1733062151000}'),l={name:"guide/mongodb/index.md"},n=t('<h1 id="mangodb简介" tabindex="-1">MangoDB简介 <a class="header-anchor" href="#mangodb简介" aria-label="Permalink to &quot;MangoDB简介&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">MongoDB 是一个开源、高性能、无模式的文档型数据库，是 NoSQL数据库产品中的一种。</p><p>它支持的数据结构非常松散，是一种类似 <code>JSON</code> 的格式叫 <code>BSON</code>，所以它既可以存储比较复杂的数据类型，又相对灵活</p><p>官方文档：<a href="https://www.mongodb.com/zh-cn/docs/manual/" target="_blank" rel="noreferrer">https://www.mongodb.com/zh-cn/docs/manual/</a></p></div><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><p>在 MongoDB 中，<code>数据库</code>、<code>集合</code> 和 <code>文档</code> 是其存储数据结构的三大核心概念。</p><h3 id="数据库-database" tabindex="-1">数据库（Database） <a class="header-anchor" href="#数据库-database" aria-label="Permalink to &quot;数据库（Database）&quot;">​</a></h3><ul><li>MongoDB中的数据库是数据的物理容器。一个MongoDB实例可以包含多个数据库，每个数据库都有自己独立的集合和权限设置。</li><li>数据库是MongoDB组织数据的最高层级。常用的数据库操作包括创建、删除数据库以及切换当前使用的数据库。</li><li>在MongoDB中，数据库的名称必须是小写字母，并且不能包含空格和某些特殊字符。</li></ul><h3 id="集合-collection" tabindex="-1">集合（Collection） <a class="header-anchor" href="#集合-collection" aria-label="Permalink to &quot;集合（Collection）&quot;">​</a></h3><ul><li>集合是MongoDB中的一个容器，用于存储一组文档。集合类似于关系型数据库中的表，但与表不同的是，集合没有固定的结构。</li><li>集合中的文档可以具有不同的字段和数据类型。即使在同一个集合中，文档的结构也可以是动态的。</li><li>集合在使用前不需要显式创建，可以在插入文档时自动创建。</li></ul><h3 id="文档-document" tabindex="-1">文档（Document） <a class="header-anchor" href="#文档-document" aria-label="Permalink to &quot;文档（Document）&quot;">​</a></h3><ul><li>文档是MongoDB中数据的基本单元。每个文档都是一个JSON格式的对象，以键值对的形式存储数据。</li><li>文档的结构是灵活的，可以包含嵌套的文档和数组。</li><li>每个文档都有一个唯一的 <code>_id</code> 字段，作为文档的主键。MongoDB会自动为每个文档生成一个唯一的 <code>_id</code>，除非用户显式指定。</li><li>文档之间可以有不同的字段和数据类型，这使得MongoDB具有很高的灵活性和扩展性。</li></ul>',10),i=[n];function d(c,r,s,h,u,m){return e(),a("div",null,i)}const b=o(l,[["render",d]]);export{g as __pageData,b as default};
