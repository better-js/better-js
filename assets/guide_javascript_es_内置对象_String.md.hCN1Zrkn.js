import{_ as t,c as r,o,V as e}from"./chunks/framework.__fMkWnK.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javascript/es/内置对象/String.md","filePath":"guide/javascript/es/内置对象/String.md","lastUpdated":1732283740000}'),p={name:"guide/javascript/es/内置对象/String.md"},a=e('<h2 id="静态方法" tabindex="-1">静态方法 <a class="header-anchor" href="#静态方法" aria-label="Permalink to &quot;静态方法&quot;">​</a></h2><p>String.fromCharCode() String.fromCodePoint() String.raw()</p><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><p>String.prototype[@@iterator]() String.prototype.at() String.prototype.charAt() String.prototype.charCodeAt() String.prototype.codePointAt() String.prototype.concat() String.prototype.endsWith() String.prototype.includes() String.prototype.indexOf() String.prototype.isWellFormed() String.prototype.lastIndexOf() String.prototype.localeCompare() String.prototype.match() String.prototype.matchAll() String.prototype.normalize() String.prototype.padEnd() String.prototype.padStart() String.prototype.repeat() String.prototype.replace() String.prototype.replaceAll() String.prototype.search() String.prototype.slice() String.prototype.split() String.prototype.startsWith() String.prototype.substring() String.prototype.toLocaleLowerCase() String.prototype.toLocaleUpperCase() String.prototype.toLowerCase() String.prototype.toString() String.prototype.toUpperCase() String.prototype.toWellFormed() String.prototype.trim() String.prototype.trimEnd() String.prototype.trimStart() String.prototype.valueOf()</p><h2 id="实例属性" tabindex="-1">实例属性 <a class="header-anchor" href="#实例属性" aria-label="Permalink to &quot;实例属性&quot;">​</a></h2><p>String：length</p>',6),i=[a];function n(S,g,s,c,l,d){return o(),r("div",null,i)}const _=t(p,[["render",n]]);export{h as __pageData,_ as default};
