import{_ as i,c as s,o as a,V as e}from"./chunks/framework.YnO4XY28.js";const g=JSON.parse('{"title":"获取元素内容","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javascript/DOM/获取元素内容.md","filePath":"guide/javascript/DOM/获取元素内容.md","lastUpdated":1732283740000}'),t={name:"guide/javascript/DOM/获取元素内容.md"},n=e(`<h1 id="获取元素内容" tabindex="-1">获取元素内容 <a class="header-anchor" href="#获取元素内容" aria-label="Permalink to &quot;获取元素内容&quot;">​</a></h1><p>DOM对象都是根据标签生成的,所以操作标签,本质上就是操作DOM对象。</p><h2 id="document-write" tabindex="-1">document.write() <a class="header-anchor" href="#document-write" aria-label="Permalink to &quot;document.write()&quot;">​</a></h2><ul><li><p>只能将文本内容追加到 <code>&lt;/body&gt;</code> 前面的位置</p></li><li><p>文本中包含的标签会被解析</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>永远只能追加操作，且只能位置前</li><li>可以向文档中写入 HTML标签 或 JavaScript代码</li></ul></li></ul><h2 id="innertext-非标准" tabindex="-1">innerText（非标准） <a class="header-anchor" href="#innertext-非标准" aria-label="Permalink to &quot;innerText（非标准）&quot;">​</a></h2><ul><li><p>将文本内容添加/更新到任意标签位置</p></li><li><p>文本中包含的标签不会被解析</p></li><li><p>去除空格和换行</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">info.innerText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;h4&gt;嗨～ 我叫李雷！&lt;/h4&gt;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h2 id="innerhtml-w3c标准" tabindex="-1">innerHTML（W3C标准） <a class="header-anchor" href="#innerhtml-w3c标准" aria-label="Permalink to &quot;innerHTML（W3C标准）&quot;">​</a></h2><ul><li><p>将文本内容添加/更新到任意标签位置</p></li><li><p>文本中包含的标签会被解析</p></li><li><p>保留空格和换行</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">box.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;h3&gt;小苏同学&lt;br&gt;很帅！&lt;/h3&gt;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul>`,8),l=[n];function p(r,h,d,c,o,k){return a(),s("div",null,l)}const E=i(t,[["render",p]]);export{g as __pageData,E as default};
