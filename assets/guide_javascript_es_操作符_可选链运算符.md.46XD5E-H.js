import{_ as s,c as a,o as n,V as i}from"./chunks/framework.YnO4XY28.js";const g=JSON.parse('{"title":"可选链运算符","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javascript/es/操作符/可选链运算符.md","filePath":"guide/javascript/es/操作符/可选链运算符.md","lastUpdated":1732283740000}'),e={name:"guide/javascript/es/操作符/可选链运算符.md"},l=i(`<h1 id="可选链运算符" tabindex="-1">可选链运算符 <a class="header-anchor" href="#可选链运算符" aria-label="Permalink to &quot;可选链运算符&quot;">​</a></h1><h2 id="可选链运算符-1" tabindex="-1"><code>?.</code> 可选链运算符 <a class="header-anchor" href="#可选链运算符-1" aria-label="Permalink to &quot;\`?.\` 可选链运算符&quot;">​</a></h2><p><strong>可选链运算符</strong>（<strong><code>?.</code></strong>）允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。如果引用是空值（<code>null</code> 或 <code>undefined</code>），可选链运算符将返回 <code>undefined</code> 而不是导致错误。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IronManInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tony&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(IronManInfo?.age); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 与函数调用一起使用时，如果给定的函数不存在，则返回 undefined</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(IronManInfo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getArmorModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?.()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,4),t=[l];function p(r,h,d,o,c,k){return n(),a("div",null,t)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
