import{_ as a,c as e,o as l,V as i}from"./chunks/framework.YnO4XY28.js";const m=JSON.parse('{"title":"精灵图","description":"","frontmatter":{},"headers":[],"relativePath":"guide/css/精灵图.md","filePath":"guide/css/精灵图.md","lastUpdated":1732283740000}'),t={name:"guide/css/精灵图.md"},r=i('<h1 id="精灵图" tabindex="-1">精灵图 <a class="header-anchor" href="#精灵图" aria-label="Permalink to &quot;精灵图&quot;">​</a></h1><h2 id="为什么需要精灵图" tabindex="-1">为什么需要精灵图？ <a class="header-anchor" href="#为什么需要精灵图" aria-label="Permalink to &quot;为什么需要精灵图？&quot;">​</a></h2><ul><li><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p></li><li><p>因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了CSS精灵技术（也称为CSS Sprites、CSS雪碧）</p></li></ul><h2 id="核心原理" tabindex="-1">核心原理 <a class="header-anchor" href="#核心原理" aria-label="Permalink to &quot;核心原理&quot;">​</a></h2><ul><li>项目中将多张小图片，合并成一张大图片，这样服务器只需要一次请求就可以了，这张大图片称之为精灵图</li></ul><h2 id="优缺点" tabindex="-1">优缺点 <a class="header-anchor" href="#优缺点" aria-label="Permalink to &quot;优缺点&quot;">​</a></h2><ul><li>优点： <ul><li>减少服务器发送次数，减轻服务器的压力，提高页面加载速度。</li></ul></li><li>缺点： <ul><li>整合图片过程繁琐--UI完成</li></ul></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ul><li>主要借助背景位置来实现---background-position</li><li>一般情况下精灵图都是负值。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理。）</li></ul>',9),o=[r];function s(n,d,c,h,u,_){return l(),e("div",null,o)}const f=a(t,[["render",s]]);export{m as __pageData,f as default};
