import{_ as s,c as a,o as i,V as n}from"./chunks/framework.YnO4XY28.js";const u=JSON.parse('{"title":"CommonJS规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javascript/es/模块/CommonJS.md","filePath":"guide/javascript/es/模块/CommonJS.md","lastUpdated":1732283740000}'),e={name:"guide/javascript/es/模块/CommonJS.md"},p=n(`<h1 id="commonjs规范" tabindex="-1">CommonJS规范 <a class="header-anchor" href="#commonjs规范" aria-label="Permalink to &quot;CommonJS规范&quot;">​</a></h1><p>在 CommonJS 标准中，导出数据有两种方式：</p><ul><li>第一种方式：<code>module.exports = value</code></li><li>第二种方式：<code>exports.name = value</code></li></ul><p>注意点：</p><ol><li><p>每个模块内部的：<code>this</code>、<code>exports</code>、<code>module.exports</code> 在初始化时，都指向<strong>同一个</strong>空对象，该空对象就是当前模块导出的数据。</p><p>![image-20240810114816856](/Users/dongxu/Library/Application Support/typora-user-images/image-20240810114816856.png)</p></li><li><p>无论如何修改导出对象，最终导出的都是 <code>module.exports</code> 的值</p></li><li></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导出</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./a.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,6),l=[p];function t(r,o,h,d,c,k){return i(),a("div",null,l)}const g=s(e,[["render",t]]);export{u as __pageData,g as default};
