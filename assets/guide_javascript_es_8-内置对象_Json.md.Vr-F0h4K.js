import{_ as e,c as a,o as t,V as o}from"./chunks/framework.YnO4XY28.js";const J=JSON.parse('{"title":"json","description":"","frontmatter":{},"headers":[],"relativePath":"guide/javascript/es/8-内置对象/Json.md","filePath":"guide/javascript/es/8-内置对象/Json.md","lastUpdated":1732283740000}'),r={name:"guide/javascript/es/8-内置对象/Json.md"},s=o('<h1 id="json" tabindex="-1">json <a class="header-anchor" href="#json" aria-label="Permalink to &quot;json&quot;">​</a></h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/JSON" target="_blank" rel="noreferrer">JSON</a> 是一种按照 JavaScript 对象语法的数据格式，虽然它是基于 JavaScript 语法，但它独立于 JavaScript，这也是为什么许多程序环境能够读取（解读）和生成 JSON。</p><p>JSON 可以作为一个对象或者字符串存在，前者用于解读 JSON 中的数据，后者用于通过网络传输 JSON 数据。</p><p>将字符串转换为原生对象称为<em>反序列化</em>（deserialization），而将原生对象转换为可以通过网络传输的字符串称为<em>序列化</em>（serialization）。</p><ul><li><code>parse()</code>：以文本字符串形式接受 JSON 对象作为参数，并返回相应的对象。</li><li><code>stringify()</code>：接收一个对象作为参数，返回一个对应的 JSON 字符串。</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>JSON 是一种纯数据格式，它只包含属性，没有方法。</li><li>JSON 要求在字符串和属性名称周围使用双引号。单引号无效。</li><li><a href="https://jsonlint.com/" target="_blank" rel="noreferrer">https://jsonlint.com/</a></li></ul>',7),i=[s];function l(n,c,d,p,_,h){return t(),a("div",null,i)}const S=e(r,[["render",l]]);export{J as __pageData,S as default};
