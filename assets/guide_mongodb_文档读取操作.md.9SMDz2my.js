import{_ as s,c as a,o as i,V as n}from"./chunks/framework.__fMkWnK.js";const u=JSON.parse('{"title":"读取文档","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mongodb/文档读取操作.md","filePath":"guide/mongodb/文档读取操作.md","lastUpdated":1733062151000}'),e={name:"guide/mongodb/文档读取操作.md"},l=n(`<h1 id="读取文档" tabindex="-1">读取文档 <a class="header-anchor" href="#读取文档" aria-label="Permalink to &quot;读取文档&quot;">​</a></h1><p>读取操作用于查询集合中的文档，在 MongoDB 中使用 <code>db.collection.find()</code> 方法查询集合中的文档。</p><h3 id="_1-基本查询" tabindex="-1">(1) 基本查询 <a class="header-anchor" href="#_1-基本查询" aria-label="Permalink to &quot;(1) 基本查询&quot;">​</a></h3><h4 id="查询集合中的所有文档" tabindex="-1">查询集合中的所有文档 <a class="header-anchor" href="#查询集合中的所有文档" aria-label="Permalink to &quot;查询集合中的所有文档&quot;">​</a></h4><p>使用 <code>find()</code> 方法查询集合中的文档时，如果没有指定任何条件，默认返回集合中的所有文档。</p><div class="info custom-block"><p class="custom-block-title">例子</p><p>查询 <code>matu.users</code> 集合中的所有文档</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> matu</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.users.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h4 id="查询集合中的单个文档" tabindex="-1">查询集合中的单个文档 <a class="header-anchor" href="#查询集合中的单个文档" aria-label="Permalink to &quot;查询集合中的单个文档&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">例子</p><p>如果只想获取第一条文档，可以使用：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.users.findOne</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="_2-条件查询" tabindex="-1">(2) 条件查询 <a class="header-anchor" href="#_2-条件查询" aria-label="Permalink to &quot;(2) 条件查询&quot;">​</a></h3><p>可以通过传递一个查询对象给 <code>find()</code> 方法来实现条件查询。</p><div class="info custom-block"><p class="custom-block-title">例子</p><p>查询 <code>matu.users</code> 集合中，name 为 dancy 的所有文档</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> matu</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.users.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Dancy&quot;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h3 id="_2-投影查询" tabindex="-1">(2) 投影查询 <a class="header-anchor" href="#_2-投影查询" aria-label="Permalink to &quot;(2) 投影查询&quot;">​</a></h3><p>如果要查询结果返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）</p><p>如：查询结果只显示 <code>_id</code>、<code>_name</code></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 为1代表显示，_id默认显示的，不想显示可以将其设置为0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;: &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zhangsan</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;},{_id:1,name:1})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如：查询所有数据，但只显示 <code>_id</code>、<code>_name</code></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{_id:1,name:1})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="统计查询" tabindex="-1">统计查询 <a class="header-anchor" href="#统计查询" aria-label="Permalink to &quot;统计查询&quot;">​</a></h2><p>统计查询使用 <code>count()</code> 方法</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.count(query,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>（1）统计所有记录数</p><p>例如：统计 dancy 集合的所有记录数：</p><p>默认情况下 <code>count()</code> 方法返回所有符合条件的全部记录条数</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>（2）按条件统计记录数</p><p>例如：统计 name 为 dancy 的记录数</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.count(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dancy&quot;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="限制和跳过" tabindex="-1">限制和跳过 <a class="header-anchor" href="#限制和跳过" aria-label="Permalink to &quot;限制和跳过&quot;">​</a></h2><p>可以使用 <code>limit()</code> 方法来读取指定数量的数据，使用 <code>skip()</code> 方法来跳过指定数量的数据</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">读取数量</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).skip(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">跳过数量</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你想返回指定条数的记录，可以在 <code>find()</code> 方法后调用 <code>limit()</code> 来返回结果，默认值20，例如：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回 3 条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>skip()</code> 方法同样接受一个数字参数作为跳过的记录条数。（前N个不要），默认值是0。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().skip(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>分页查询</p><p>需求：每页2个，第二页开始跳过前两条数据，接着值显示3和4条</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第一页</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().skip(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第二页</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().skip(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第三页</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().skip(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="排序查询" tabindex="-1">排序查询 <a class="header-anchor" href="#排序查询" aria-label="Permalink to &quot;排序查询&quot;">​</a></h2><p><code>sort()</code> 方法对数据进行排序，<code>sort()</code> 方法可以通过参数指定排序的字段，并使用 <code>1</code> 和 <code>-1</code> 来指定排序的方式，其中 <code>1</code> 为生序排列，而 <code>-1</code> 为降序排列。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().sort(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">排序方式</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如：</p><p>对 userId 降序排列，并对访问量进行生序排列</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().sort({userId: -1, likenum: 1})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：</p><p><code>skip()</code>、<code>limit()</code>、<code>sort()</code> 三个放在一起执行的时候和命令的编写顺序无关，它们的执行的顺序是先 <code>sort()</code>，然后是 <code>skip()</code>，最后是显示的 <code>limit()</code></p><h2 id="正则的复杂条件查询" tabindex="-1">正则的复杂条件查询 <a class="header-anchor" href="#正则的复杂条件查询" aria-label="Permalink to &quot;正则的复杂条件查询&quot;">​</a></h2><p>MongoDB的模糊查询是通过正则表达式的方式来实现的</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{字段:/正则表达式/})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，我要查询评论内容含“开水”的所有文档</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{content:/开水/})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果要查询评论的内容中以“专家”开头的</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{content: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/^专家/}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="比较查询" tabindex="-1">比较查询 <a class="header-anchor" href="#比较查询" aria-label="Permalink to &quot;比较查询&quot;">​</a></h2><p><code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code> 这个操作符也是很常用的</p><ul><li>大于：<code>$gt</code></li><li>小于：<code>$lt</code></li><li>大于等于：<code>$gte</code></li><li>小于等于：<code>$lte</code></li><li>不等于：<code>$ne</code></li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{字段: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{操作符: 值}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如：查询评论点赞数量大于700的记录</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	likenum:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		$gt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NumberInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="包含查询" tabindex="-1">包含查询 <a class="header-anchor" href="#包含查询" aria-label="Permalink to &quot;包含查询&quot;">​</a></h2><p>包含使用 <code>$in</code> 操作符</p><p>例如：查询评论的集合中 <code>userId</code> 字段包含 1003 或 1004 的文档</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	userId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		$in: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1003&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1004&quot;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>不包含使用 <code>$nin</code> 操作符</p><p>例如：查询评论集合中 <code>userId</code> 字段不包含 1003 和 1004 的文档</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	userId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		$nin: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1003&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1004&quot;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="条件连接查询" tabindex="-1">条件连接查询 <a class="header-anchor" href="#条件连接查询" aria-label="Permalink to &quot;条件连接查询&quot;">​</a></h2><p>如果需要查询同时满足两个以上条件，需要使用 <code>$and</code> 操作符进行条件关联。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	$and: [{}, {}, {}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>例如：查询评论集合中 likenum 大于等于 700，并且小于 2000 的文档</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	$and: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">				likenum:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					$gte: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NumberInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">				likenum:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					$lt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NumberInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>如果两个以上条件是或者的关系，我们使用 <code>$or</code> 操作符进行关联，与 <code>$and</code> 的使用方式相同</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.集合名.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	$or: [{}, {}, {}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>例如：查询评论结合中 userId 为1003，或者点赞数小于 1000 的文档记录</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dancy.find(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	$or: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">			userId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1003&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">			likenum:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$lt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: NumberInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,74),p=[l];function t(h,d,r,k,c,o){return i(),a("div",null,p)}const E=s(e,[["render",t]]);export{u as __pageData,E as default};
